-- MySQL Script generated by MySQL Workbench
-- Tue Jun 24 16:15:06 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db_review_movie
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db_review_movie
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_review_movie` DEFAULT CHARACTER SET utf8 ;
USE `db_review_movie` ;

-- -----------------------------------------------------
-- Table `db_review_movie`.`cast`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_review_movie`.`cast` (
  `cast_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `age` INT NULL,
  `biodata` VARCHAR(45) NULL,
  PRIMARY KEY (`cast_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_review_movie`.`profile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_review_movie`.`profile` (
  `profile_id` INT NOT NULL,
  `AGE` INT NULL,
  `BIODATA` VARCHAR(45) NULL,
  `ADDRESS` VARCHAR(45) NULL,
  PRIMARY KEY (`profile_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_review_movie`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_review_movie`.`user` (
  `user_id` INT NOT NULL,
  `username` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `profile_profile_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `profile_profile_id`),
  INDEX `fk_user_profile_idx` (`profile_profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_profile`
    FOREIGN KEY (`profile_profile_id`)
    REFERENCES `db_review_movie`.`profile` (`profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_review_movie`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_review_movie`.`genre` (
  `genre_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`genre_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_review_movie`.`movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_review_movie`.`movie` (
  `movie_id` INT NOT NULL,
  `title` VARCHAR(45) NULL,
  `summary` VARCHAR(45) NULL,
  `year` VARCHAR(45) NULL,
  `poster` VARCHAR(45) NULL,
  `genre_genre_id` INT NOT NULL,
  PRIMARY KEY (`movie_id`, `genre_genre_id`),
  INDEX `fk_movie_genre1_idx` (`genre_genre_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_genre1`
    FOREIGN KEY (`genre_genre_id`)
    REFERENCES `db_review_movie`.`genre` (`genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_review_movie`.`review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_review_movie`.`review` (
  `user_user_id` INT NOT NULL,
  `user_profile_profile_id` INT NOT NULL,
  `movie_movie_id` INT NOT NULL,
  `rating` FLOAT NULL,
  `critics` VARCHAR(45) NULL,
  `review_id` INT NOT NULL,
  PRIMARY KEY (`user_user_id`, `user_profile_profile_id`, `movie_movie_id`, `review_id`),
  INDEX `fk_user_has_movie_movie1_idx` (`movie_movie_id` ASC) VISIBLE,
  INDEX `fk_user_has_movie_user1_idx` (`user_user_id` ASC, `user_profile_profile_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_movie_user1`
    FOREIGN KEY (`user_user_id` , `user_profile_profile_id`)
    REFERENCES `db_review_movie`.`user` (`user_id` , `profile_profile_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_movie_movie1`
    FOREIGN KEY (`movie_movie_id`)
    REFERENCES `db_review_movie`.`movie` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_review_movie`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_review_movie`.`role` (
  `movie_movie_id` INT NOT NULL,
  `movie_genre_genre_id` INT NOT NULL,
  `cast_cast_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`movie_movie_id`, `movie_genre_genre_id`, `cast_cast_id`, `role_id`),
  INDEX `fk_movie_has_cast_cast1_idx` (`cast_cast_id` ASC) VISIBLE,
  INDEX `fk_movie_has_cast_movie1_idx` (`movie_movie_id` ASC, `movie_genre_genre_id` ASC) VISIBLE,
  CONSTRAINT `fk_movie_has_cast_movie1`
    FOREIGN KEY (`movie_movie_id` , `movie_genre_genre_id`)
    REFERENCES `db_review_movie`.`movie` (`movie_id` , `genre_genre_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_movie_has_cast_cast1`
    FOREIGN KEY (`cast_cast_id`)
    REFERENCES `db_review_movie`.`cast` (`cast_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
